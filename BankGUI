import javax.swing.*;
import java.awt.event.*;

public class BankAppl {
    public static void main(String[] args) {
        Bank bank = new Bank();
        bank.run();
    }
}

class Bank {
    private JFrame frame;
    private JButton inquiryButton, depositButton, withdrawButton;
    private IAccount acc1, acc2;

    public Bank() {
        acc1 = new NormalAccount(1, 10000);
        acc2 = new MinusAccount(2, 50000, 10000);
        initialize();
    }

    private void initialize() {
        frame = new JFrame();
        frame.setBounds(500, 250, 500, 200);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().setLayout(null);

        inquiryButton = new JButton("잔고 조회");
        inquiryButton.setBounds(50, 100, 100, 30);
        frame.getContentPane().add(inquiryButton);

        depositButton = new JButton("입금");
        depositButton.setBounds(200, 100, 100, 30);
        frame.getContentPane().add(depositButton);

        withdrawButton = new JButton("출금");
        withdrawButton.setBounds(350, 100, 100, 30);
        frame.getContentPane().add(withdrawButton);

        inquiryButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                JOptionPane.showMessageDialog(null, "잔고가 " + acc2.getBalance() + "원입니다.");
            }
        });

        depositButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String input = JOptionPane.showInputDialog("입금할 금액을 입력하시오: ");
                int amount = Integer.parseInt(input);
                acc2.deposit(amount);
                JOptionPane.showMessageDialog(null, "잔고가 " + acc2.getBalance() + "원입니다.");
            }
        });

        withdrawButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String input = JOptionPane.showInputDialog("출금할 금액을 입력하시오: ");
                int amount = Integer.parseInt(input);
                if (acc2.withdraw(amount))
                    JOptionPane.showMessageDialog(null, "잔고가 " + acc2.getBalance() + "원입니다.");
                else
                    JOptionPane.showMessageDialog(null, "잔고가 부족합니다.");
            }
        });
    }

    public void run() {
        frame.setVisible(true);
    }
}

interface IAccount {
    int getAccountNumber();
    int getBalance();
    void deposit(int amount);
    boolean withdraw(int amount);
}

class Account implements IAccount {
    protected int accountNumber;
    protected int balance;

    public Account(int number, int amount) {
        accountNumber = number;
        balance = amount;
    }

    public int getAccountNumber() {
        return accountNumber;
    }

    public int getBalance() {
        return balance;
    }

    public void deposit(int amount) {
        balance += amount;
    }

    public boolean withdraw(int amount) {
        if (amount <= balance) {
            balance -= amount;
            return true;
        } else {
            return false;
        }
    }
}

class NormalAccount extends Account {
    public NormalAccount(int number, int amount) {
        super(number, amount);
    }
}

class MinusAccount extends Account {
    private int creditAmount;

    public MinusAccount(int number, int amount, int creditAmount) {
        super(number, amount);
        this.creditAmount = creditAmount;
    }

    public boolean withdraw(int amount) {
        if (amount <= balance + creditAmount) {
            balance -= amount;
            return true;
        } else {
            return false;
        }
    }
}
